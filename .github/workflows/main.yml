name: production

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DB_DRIVER: ${{secrets.DB_DRIVER}}
  DB_USER: ${{secrets.DB_USER}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  DB_HOST: ${{secrets.DB_HOST}}
  DB_NAME: ${{secrets.DB_NAME}}
  DB_PORT: ${{secrets.DB_PORT}}
  NODE_ENV: ${{secrets.NODE_ENV}}
  SSH: ssh -T ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}
  ENV_FILE: birthday-reminder-backend/.production.env

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   environment: production

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build image
  #       run: docker build -t ${{secrets.DOCKERHUB_ACCOUNT}}/${{secrets.DOCKERHUB_IMAGE_NAME}} -f Dockerfile.production .

  #     - name: Login to DockerHub
  #       run: echo ${{secrets.DOCKERHUB_TOKEN}} | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

  #     - name: Push image to Docker Hub
  #       run: docker push ${{secrets.DOCKERHUB_ACCOUNT}}/${{secrets.DOCKERHUB_IMAGE_NAME}}

  deploy:
    runs-on: ubuntu-latest
    environment: production
    # needs: build

    steps:
      - name: SSH setting
        run: |
          mkdir -p ~/.ssh/
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          echo "${{secrets.SSH_KNOWN_HOSTS}}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa

      - name: ENV setting
        run: |
          ${{env.SSH}} rm -f ${{ENV_FILE}}
          ${{env.SSH}} touch ${{ENV_FILE}}
          ${{env.SSH}} echo 'DB_DRIVER=${{secrets.DB_DRIVER}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'DB_USER=${{secrets.DB_USER}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'DB_PASSWORD=${{secrets.DB_PASSWORD}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'DB_HOST=${{secrets.DB_HOST}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'DB_NAME=${{secrets.DB_NAME}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'DB_PORT=${{secrets.DB_PORT}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'POSTGRES_USER=${{secrets.DB_USER}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'POSTGRES_PASSWORD=${{secrets.DB_PASSWORD}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'POSTGRES_DB=${{secrets.DB_NAME}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'PGPORT=${{secrets.DB_PORT}} >> ${{ENV_FILE}}'
          ${{env.SSH}} echo 'NODE_ENV=${{secrets.NODE_ENV}} >> ${{ENV_FILE}}'

      # - name: Stop containers
      #   run: ${{env.SSH}} docker-compose -f ${{env.WORKDIR}}/docker-compose.production.yml down

      # - name: Run containers
      #   run: ${{env.SSH}} docker-compose -f ${{env.WORKDIR}}/docker-compose.production.yml up -d --build
